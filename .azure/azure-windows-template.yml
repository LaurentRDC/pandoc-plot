jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack-lts-14:
        ARGS: "--resolver lts-14"
    maxParallel: 6
  steps:
    # The specifics of using conda environments on Azure Pipelines
    # is described here:
    #    https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/anaconda?view=azure-devops&tabs=vs2017
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: |
      # Create anaconda environment
      conda update --yes -n base -c defaults conda
      conda create --quiet --yes --name testenv python=3.7

      call activate testenv

      # Pillow is required to save images to jpg
      conda install --quiet --yes --name testenv matplotlib pillow

      # Plotly installation instructions are more complex because we export static images
      # https://plot.ly/python/static-image-export/
      conda install --quiet --yes --name testenv -c plotly plotly-orca psutil requests
      conda install --quiet --yes --name testenv plotly
    displayName: Install Matplotlib & Plotly/Python toolkits

  - script: choco install --yes octave
    displayName: Install GNU Octave toolkit

  - script: choco install --yes gnuplot
    displayName: Install gnuplot

  - script: |
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      curl -sSkL http://www.stackage.org/stack/windows-x86_64 -o /usr/bin/stack.zip
      unzip -o /usr/bin/stack.zip -d /usr/bin/
            
      stack --install-ghc $ARGS test --bench --only-dependencies

      call activate testenv
      stack $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Installation ${{parameters.os}} & Test'
