name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    if: contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "windows-latest"
            stack_opts: "--ghc-options=-split-sections"
          - os: "ubuntu-latest"
            stack_opts: "--ghc-options=-split-sections"
          - os: "macos-latest"
            stack_opts: "--ghc-options=-split-sections"

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup Haskell toolchain
      uses: haskell/actions/setup@v1
      with:
        enable-stack: true
        stack-version: 'latest'

    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - uses: r-lib/actions/setup-r@v1

    - uses: actions/cache@v2
      name: Cache Haskell build artifacts
      if: matrix.os != 'macos-latest'
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ hashFiles('stack.*') }}

    - uses: actions/cache@v2
      name: Cache Python build artifacts
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ hashFiles('.github/workflows/requirements.txt') }}

    - name: Build pandoc-plot
      run: stack install

    - name: Install Python toolkits
      run: |
        python -m pip install --upgrade pip
        pip install numpy wheel
        pip install -r .github/workflows/requirements.txt
    
    - name: Install Plots.jl toolkit
      shell: julia {0}
      run: |
        using Pkg
        Pkg.add("Plots")

    - name: Install GGPlot2
      run: |
        Rscript -e "install.packages('ggplot2', repos='http://cran.rstudio.com/')"

    - name: Install Octave, Gnuplot, Graphviz, and PlantUML [Linux]
      if: runner.os == 'Linux'
      run: |
        sudo apt-get --quiet --yes install octave
        sudo apt-get --quiet --yes install gnuplot
        sudo apt-get --quiet --yes install graphviz

        sudo apt-get --quiet --yes install plantuml
        sudo mv /usr/share/plantuml/plantuml.jar .
        java -jar plantuml.jar -h

    - name: Install Graphviz and GNUplot [Windows]
      if: runner.os == 'Windows'
      shell: pwsh
      run: |        
        choco install --yes --no-progress graphviz
        dot -c

        choco install --yes --no-progress gnuplot
    
    - name: Build dependencies
      run: stack build ${{ matrix.stack_opts }} --test --no-run-tests

    - name: Check installed plotting toolkits
      run: stack exec -- pandoc-plot toolkits

    - name: Unit tests
      run: stack test ${{ matrix.stack_opts }}
    
    - name: Integration tests
      shell: bash
      run: |
        stack install pandoc ${{ matrix.stack_opts }}
        stack install ${{ matrix.stack_opts }}
        
        stack exec -- pandoc --filter pandoc-plot -i tests/integration.md -t html
        if [ $(ls "plots" | wc -l) == 0 ]; then
          exit 1
        fi
        stack exec -- pandoc-plot clean tests/integration.md

        stack exec -- pandoc --filter pandoc-plot -i tests/issue16.md -t native
        if [ $(ls "plots" | wc -l) == 0 ]; then
          exit 1
        fi
        stack exec -- pandoc-plot clean tests/issue16.md
    
    - name: Build documentation
      shell: pwsh
      run: .\tools\mkmanual.ps1

    - name: Build artifact
      shell: bash
      run: |
        mkdir artifact
        stack install ${{ matrix.stack_opts }} --local-bin-path artifact

        if [[ "${{ runner.os }}" != "Windows" ]]
        then
          chmod +x artifact/pandoc-plot
        fi
    
    - name: Build artifact [Linux - static]
      if: runner.os == 'Linux'
      run: |
        mkdir artifact-static
        stack install ${{ matrix.stack_opts }} --flag pandoc-plot:static --local-bin-path artifact-static
        chmod +x artifact-static/pandoc-plot

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: pandoc-plot-${{ runner.os }}-x86_64
        path: artifact/pandoc-plot*
        retention-days: 7

    - name: Upload artifact [Linux - static]
      uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'
      with:
        name: pandoc-plot-${{ runner.os }}-x86_64-static
        path: artifact-static/pandoc-plot
        retention-days: 7

    - name: Build Installer [Windows]
      if: runner.os == 'Windows'
      shell: pwsh
      run: .\tools\build-setup.ps1

    - name: Upload artifact [Windows - installer]
      uses: actions/upload-artifact@v2
      if: runner.os == 'Windows'
      with:
        name: pandoc-plot-wininst-x86_64
        path: installer/pandoc-plot-wininst-x86_64.exe
        retention-days: 7