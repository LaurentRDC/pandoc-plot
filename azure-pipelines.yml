# This is the complex Azure configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/azure_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named azure-pipelines.yml
#
# For better organization, you split various jobs into seprate parts
# and each of them are controlled via individual file.

trigger:
  branches:
    include:
    - master
    - release
  paths:
    exclude:
    - "readme/*"
    - "*.md"
    - ".github/*"
    - example-config.yml
    - build-setup.ps1
    - installer/*

jobs:
- template: ./.azure/azure-linux-template.yml
  parameters:
    name: Linux
    vmImage: ubuntu-latest
    os: linux

# There are strange problems with CI on Windows, where builds with GHC 8.8.*
# always fail. Therefore, we distinguish between builds on Ubuntu and Windows
# and use an older compiler on Windows.
# See here for bug reports:
#   https://gitlab.haskell.org/ghc/ghc/issues/17599
#   https://gitlab.haskell.org/ghc/ghc/issues/17926
#
# Disabling Windows CI until GHC 8.10.1
#
# - template: ./.azure/azure-windows-template.yml
#   parameters:
#    name: Windows
#    vmImage: windows-latest
#    os: windows

- template: ./.azure/azure-macos-template.yml
  parameters:
   name: MacOS
   vmImage: macOS-latest
   os: macos
  
# - job: Release
#   dependsOn: [Windows, Linux]
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#   pool:
#     vmImage: windows-latest
#   steps:

#   - bash: mkdir .azure-release
#     displayName: Create space for release artifacts

#   - task: DownloadPipelineArtifact@2
#     inputs:
#       patterns: '(*.zip)|(*.tar.xz)'
#       path: .azure-release
  
#   - bash: ls .azure-release
#     displayName: Examine resulting downloads
