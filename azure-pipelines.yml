# This is the complex Azure configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/azure_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named azure-pipelines.yml
#
# For better organization, you split various jobs into seprate parts
# and each of them are controlled via individual file.

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - "*.md"
    - .appveyor.yml
    - example-config.yml
    - build-setup.ps1
    - installer/*

jobs:
- template: ./.azure/azure-linux-template.yml
  parameters:
    name: Linux
    vmImage: ubuntu-latest
    os: linux

- template: ./.azure/azure-windows-template.yml
  parameters:
   name: Windows
   vmImage: windows-latest
   os: windows
  
- job: Release
  dependsOn: Windows, Linux
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: windows-latest
  steps:
  - step: mkdir $(Build.SourcesDirectory)/.azure-release
    displayName: Create space for release artifacts

  - task: DownloadPipelineArtifact@2
    inputs:
      patterns: '**(.zip|.tar.xz)'
      path: $(Build.SourcesDirectory)/.azure-release
  
  - bash: ls $(Build.SourcesDirectory)/.azure-release
    displayName: Examine resulting downloads
